apiVersion: k0sctl.k0sproject.io/v1beta1
kind: Cluster
metadata:
  name: {{ kubernetes.cluster_name }}
spec:
  hosts:
  k0s:
    version: 1.23.3+k0s.1
    config:
      apiVersion: k0s.k0sproject.io/v1beta1
      kind: Cluster
      metadata:
        name: {{ kubernetes.cluster_name }}
      spec:
        extensions:
          helm:
            repositories:
            - name: vsphere-helm
              url: https://stefanvangastel.github.io/vsphere-cpi-csi-helm/
{% if metallb.enabled %}
            - name: bitnami
              url: https://charts.bitnami.com/bitnami
{% endif %}
            charts:
            - name: vsphere-cpi-csi
              chartname: vsphere-helm/vsphere-cpi-csi
              version: "2.3.0"
              namespace: kube-system
              values: |
                vcenter:
                  host: "{{ vcenter.host }}"
                  username: "{{ vcenter.username }}"
                  password: "{{ vcenter.password }}"
                  datacenter: "{{ vcenter.datacenter }}"
                kubelet:
                  path: /var/lib/k0s/kubelet
                cloudProvider:
                  nodeSelector:
                    node-role.kubernetes.io/control-plane: "true"
                  tolerations:
                    - key: node.cloudprovider.kubernetes.io/uninitialized
                      value: "true"
                      effect: NoSchedule
                    - key: node-role.kubernetes.io/control-plane
                      value: "true"
                      effect: NoSchedule
                    - key: node-role.kubernetes.io/etcd
                      value: "true"
                      effect: NoExecute
                    - key: node-role.kubernetes.io/master
                      operator: Exists
                csiController:
                  nodeSelector:
                    node-role.kubernetes.io/control-plane: "true"
                  tolerations:
                    - key: node-role.kubernetes.io/control-plane
                      value: "true"
                      effect: NoSchedule
                    - key: node-role.kubernetes.io/etcd
                      value: "true"
                      effect: NoExecute
                    - key: node-role.kubernetes.io/master
                      operator: Exists
{% if metallb.enabled %}
            - name: metallb
              chartname: bitnami/metallb
              version: 2.6.8
              namespace: kube-system
              values: |
                configInline:
                  address-pools:
                  - name: WorkerPool1
                    protocol: layer2
                    addresses:
{% for _address in metallb.addresses %}
                    - {{ _address }}
{% endfor %}
{% endif %}
        api:
{% if api is defined and api %}
          externalAddress: {{ api.external_address | default('None') }}
          sans:
{% for _sans in api.sans %}
          - {{ _sans }}
{% endfor %}
{% endif %}
          k0sApiPort: 9443
          port: 6443
        images:
          calico:
            cni:
              image: docker.io/calico/cni
              version: v3.22.1
            kubecontrollers:
              image: docker.io/calico/kube-controllers
              version: v3.22.1
            node:
              image: docker.io/calico/node
              version: v3.22.1
          coredns:
            image: docker.io/coredns/coredns
            version: 1.7.0
          default_pull_policy: IfNotPresent
          konnectivity:
            image: us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-agent
            version: v0.0.30
          kubeproxy:
            image: k8s.gcr.io/kube-proxy
            version: v1.22.1
          kuberouter:
            cni:
              image: docker.io/cloudnativelabs/kube-router
              version: v1.2.1
            cniInstaller:
              image: quay.io/k0sproject/cni-node
              version: 0.1.0
          metricsserver:
            image: gcr.io/k8s-staging-metrics-server/metrics-server
            version: v0.5.0
        installConfig:
          users:
            etcdUser: etcd
            kineUser: kube-apiserver
            konnectivityUser: konnectivity-server
            kubeAPIserverUser: kube-apiserver
            kubeSchedulerUser: kube-scheduler
        konnectivity:
          adminPort: 8133
          agentPort: 8132
        network:
          kubeProxy:
            disabled: false
            mode: iptables
          calico:
            mode: vxlan
            overlay: Always
            ipAutodetectionMethod: "can-reach=8.8.8.8"
          podCIDR: 10.244.0.0/16
          provider: calico
          serviceCIDR: 10.96.0.0/12
        podSecurityPolicy:
          defaultPolicy: 00-k0s-privileged
        storage:
          type: etcd
        telemetry:
          enabled: true