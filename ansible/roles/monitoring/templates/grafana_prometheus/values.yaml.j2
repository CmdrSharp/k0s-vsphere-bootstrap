---

grafana:
  adminPassword: admin

{% if istio.enabled and istio.ingress %}
  grafana.ini:
    server:
      serve_from_sub_path: true
      root_url: http://{{ monitoring.domain }}{{ monitoring.grafana_prometheus.basepath }}
{% endif %}

  service:
    type: {{ 'ClusterIP' if (istio.enabled and istio.ingress) else 'LoadBalancer' }}

  env:
    GF_AUTH_ANONYMOUS_ENABLED: "true"
    GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"

{% if istio.enabled and istio.ingress %}
prometheusOperator:
  admissionWebhooks:
    patch:
      podAnnotations:
        "sidecar.istio.io/inject": "false"

prometheus:
  prometheusSpec:
    additionalScrapeConfigs:
      - job_name: 'istiod'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - istio-system
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: istiod;http-monitoring

      - job_name: 'envoy-stats'
        metrics_path: /stats/prometheus
        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_container_port_name]
          action: keep
          regex: '.*-envoy-prom'
{% endif %}

{% if false %}
prometheus:
  server:
    persistentVolume:
      enabled: true
      storageClass: vsphere-csi
      accessModes:
      - ReadWriteMany
      size: 10Gi
{% endif %}